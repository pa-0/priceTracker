// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using priceTracker.Models;

#nullable disable

namespace priceTracker.Migrations
{
    [DbContext(typeof(MyDbcontext))]
    [Migration("20240630081746_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("priceTracker.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmpType")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("empType")
                        .IsFixedLength();

                    b.Property<bool?>("IsMail")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("mail")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__Employe__3213E83F0B679910");

                    b.ToTable("employes", (string)null);
                });

            modelBuilder.Entity("priceTracker.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("empId");

                    b.Property<DateOnly?>("FinishDate")
                        .HasColumnType("date")
                        .HasColumnName("finishDate");

                    b.Property<DateOnly?>("RecordDate")
                        .HasColumnType("date")
                        .HasColumnName("recordDate");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Url1")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url1")
                        .IsFixedLength();

                    b.Property<string>("Url2")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url2")
                        .IsFixedLength();

                    b.Property<string>("Url3")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url3")
                        .IsFixedLength();

                    b.Property<string>("Url4")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url4")
                        .IsFixedLength();

                    b.Property<string>("Url5")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url5")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__Entry__3213E83F69EE01BF");

                    b.HasIndex("EmpId");

                    b.ToTable("entrys", (string)null);
                });

            modelBuilder.Entity("priceTracker.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("prodId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("productName")
                        .IsFixedLength();

                    b.Property<string>("SiteName")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("siteName")
                        .IsFixedLength();

                    b.Property<string>("Url")
                        .HasMaxLength(300)
                        .HasColumnType("nchar(300)")
                        .HasColumnName("url")
                        .IsFixedLength();

                    b.Property<int?>("UrlNumber")
                        .HasColumnType("int")
                        .HasColumnName("urlNumber");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83F59A3E981");

                    b.HasIndex("ProdId");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("priceTracker.Models.Entry", b =>
                {
                    b.HasOne("priceTracker.Models.Employe", "Emp")
                        .WithMany("Entries")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Entry_Employe");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("priceTracker.Models.Product", b =>
                {
                    b.HasOne("priceTracker.Models.Entry", "Prod")
                        .WithMany("Products")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("fk_prod_entry");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("priceTracker.Models.Employe", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("priceTracker.Models.Entry", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
